version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.2.0
jobs:
  test:
    parallelism: 1
    docker:
      - image: circleci/elixir:1.9.1
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.9-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: app_test
          POSTGRES_PASSWORD: postgres

    working_directory: ~/app

    steps:
      - checkout

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix test

      - store_test_results:
          path: _build/test/lib/majudge

workflows:
  version: 2
  build_and_push_image:
    jobs:
      - test
      - aws-ecr/build-and-push-image:
          context: admin
          requires:
            - test
          repo: majudge
          tag: "$CIRCLE_SHA1"
          extra-build-args: "--build-arg DATABASE_URL=$DATABASE_URL --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE"
